{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { RemoteStreamerPlugin } from './definitions';\n\nexport class RemoteStreamerWeb extends WebPlugin implements RemoteStreamerPlugin {\n  async setNowPlayingInfo(options: { title: string; artist: string; album: string; duration: string; imageUrl: string; }): Promise<void> {\n    console.log(\"Setting now playing info\", options);\n  }\n  async enableComandCenter(options: { seek: boolean; }): Promise<void> {\n    console.log(\"Enabling lock screen control\", options);\n  }\n  private audio: HTMLAudioElement | null = null;\n  private intervalId: number | null = null;\n  private isLooping: boolean = false;\n\n  async setLoop(options: { loop: boolean }): Promise<void> {\n    this.isLooping = options.loop;\n    if (this.audio) {\n      this.audio.loop = this.isLooping;\n    }\n  }\n\n  async play(options: { url: string }): Promise<void> {\n    if (this.audio) {\n      console.log('plugin play() pause')\n      this.audio.pause();\n    }\n    console.log('plugin play() after pause')\n\n    this.audio = new Audio(options.url);\n    this.audio.id = \"pluginAudioElement\"; // Assigning an ID to the audio element\n    this.audio.loop = this.isLooping; // Set loop property\n    this.setupEventListeners(); // Call setupEventListeners here\n    await this.audio.play();\n    this.notifyListeners('play', {});\n    this.startTimeUpdates();\n  }\n\n  async pause(): Promise<void> {\n    if (this.audio) {\n      this.audio.pause();\n      this.notifyListeners('pause', {});\n    }\n  }\n\n  async resume(): Promise<void> {\n    if (this.audio) {\n      await this.audio.play();\n      this.notifyListeners('play', {});\n    }\n  }\n\n  async seekTo(options: { position: number }): Promise<void> {\n    if (this.audio) {\n      this.audio.currentTime = options.position;\n    }\n  }\n\n  async stop(): Promise<void> {\n    if (this.audio) {\n      this.audio.pause();\n      this.audio.src = ''\n      this.audio.load()\n      this.audio.currentTime = 0;\n      this.audio = null;\n      this.notifyListeners('stop', {});\n      this.stopTimeUpdates();\n      console.log('stopped', this.audio)\n    }\n  }\n\n  async setPlaybackRate(options: { rate: number }): Promise<void> {\n    if (this.audio) {\n      this.audio.playbackRate = options.rate;\n    }\n  }\n\n  private startTimeUpdates() {\n    this.stopTimeUpdates();\n    this.intervalId = window.setInterval(() => {\n      if (this.audio) {\n        this.notifyListeners('timeUpdate', { currentTime: this.audio.currentTime });\n      }\n    }, 1000);\n  }\n\n  private stopTimeUpdates() {\n    if (this.intervalId !== null) {\n      window.clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n\n  async setVolume(options: { volume: number }): Promise<void> {\n    if (this.audio) {\n      this.audio.volume = options.volume;\n    }\n  }\n\n  private setupEventListeners() {\n    if (this.audio) {\n      this.audio.onplaying = () => this.notifyListeners('play', {});\n      this.audio.onpause = () => this.notifyListeners('pause', {});\n      this.audio.onended = () => this.notifyListeners('stop', { ended: true });\n      this.audio.onerror = (e) => this.notifyListeners('error', { message: `Audio error: ${e}` });\n      this.audio.onwaiting = () => this.notifyListeners('buffering', { isBuffering: true });\n      this.audio.oncanplaythrough = () => this.notifyListeners('buffering', { isBuffering: false });\n    }\n  }\n}"]}