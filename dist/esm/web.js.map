{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { RemoteStreamerPlugin } from './definitions';\n\nexport class RemoteStreamerWeb\n  extends WebPlugin\n  implements RemoteStreamerPlugin\n{\n  async setNowPlayingInfo (options: {\n    title: string;\n    artist: string;\n    album: string;\n    duration: string;\n    imageUrl: string;\n    isLiveStream: boolean;\n    fade?: boolean;\n  }): Promise<void> {\n    this.duration = parseFloat(options.duration);\n    console.log('Setting now playing info', options);\n  }\n  async enableCommandCenter (options: { seek: boolean }): Promise<void> {\n    console.log('Enabling lock screen control', options);\n  }\n  private audio: HTMLAudioElement | null = null;\n  private intervalId: number | null = null;\n  private nextAudio: HTMLAudioElement | null = null;\n  private isLooping = false;\n  private fadeInterval: number | null = null;\n  private readonly FADE_DURATION = 1000; // 1 second fade\n  private readonly FADE_STEP = 50; // Update every 50ms\n  private duration = 0; // Track duration\n  private currentUrl = ''; // Store current URL\n\n  async setLoop (options: { loop: boolean }): Promise<void> {\n    this.isLooping = options.loop;\n    if (this.audio) {\n      this.audio.loop = this.isLooping;\n    }\n  }\n\n  async play (options: { url: string }): Promise<void> {\n    this.currentUrl = options.url;\n    if (this.audio) {\n      console.log('plugin play() pause');\n      await this.fadeOut();\n      this.audio.pause();\n    }\n    console.log('plugin play() after pause');\n\n    this.audio = new Audio(options.url);\n    this.audio.id = 'pluginAudioElement'; // Assigning an ID to the audio element\n    this.audio.loop = false; // Disable native looping to handle our own\n    this.audio.preload = 'auto';\n    this.audio.volume = 0; // Start at 0 volume for fade in\n\n    // Set up loop handling\n    if (this.isLooping) {\n      this.audio.addEventListener('timeupdate', () => {\n        if (this.audio && !this.nextAudio && this.duration > 0) {\n          const timeLeft = this.duration - this.audio.currentTime;\n\n          // Start crossfade when approaching end\n          if (timeLeft <= this.FADE_DURATION / 1000) {\n            this.startNextLoop();\n          }\n        }\n      });\n    }\n\n    // Wait for enough data before playing\n    await new Promise(resolve => {\n      if (this.audio) {\n        this.audio.addEventListener('canplaythrough', resolve, { once: true });\n        this.audio.load();\n      }\n    });\n\n    this.setupEventListeners();\n    await this.audio.play();\n    await this.fadeIn();\n    this.notifyListeners('play', {});\n    this.startTimeUpdates();\n  }\n\n  private async startNextLoop (): Promise<void> {\n    if (!this.isLooping || this.nextAudio) return;\n\n    // Create and prepare next audio instance\n    this.nextAudio = new Audio(this.currentUrl);\n    this.nextAudio.preload = 'auto';\n    this.nextAudio.volume = 0;\n\n    // Wait for next audio to be ready\n    await new Promise(resolve => {\n      if (this.nextAudio) {\n        this.nextAudio.addEventListener('canplaythrough', resolve, {\n          once: true,\n        });\n        this.nextAudio.load();\n      }\n    });\n\n    // Start playing next audio and crossfade\n    if (this.nextAudio && this.audio) {\n      await this.nextAudio.play();\n      await this.crossFade();\n    }\n  }\n\n  private async crossFade (): Promise<void> {\n    if (!this.audio || !this.nextAudio) return;\n\n    return new Promise(resolve => {\n      let progress = 0;\n      const fadeInterval = setInterval(() => {\n        progress += this.FADE_STEP;\n        const fadeRatio = progress / this.FADE_DURATION;\n\n        if (this.audio) this.audio.volume = Math.max(0, 1 - fadeRatio);\n        if (this.nextAudio) this.nextAudio.volume = Math.min(1, fadeRatio);\n\n        if (progress >= this.FADE_DURATION) {\n          clearInterval(fadeInterval);\n          if (this.audio) {\n            this.audio.pause();\n            this.audio = this.nextAudio;\n            this.nextAudio = null;\n          }\n          resolve();\n        }\n      }, this.FADE_STEP);\n    });\n  }\n\n  private async fadeIn (): Promise<void> {\n    if (!this.audio) return;\n\n    return new Promise(resolve => {\n      let volume = 0;\n      this.audio!.volume = volume;\n\n      this.fadeInterval = window.setInterval(() => {\n        volume = Math.min(volume + this.FADE_STEP / this.FADE_DURATION, 1);\n        if (this.audio) {\n          this.audio.volume = volume;\n        }\n\n        if (volume >= 1) {\n          if (this.fadeInterval) {\n            clearInterval(this.fadeInterval);\n            this.fadeInterval = null;\n          }\n          resolve();\n        }\n      }, this.FADE_STEP);\n    });\n  }\n\n  private async fadeOut (): Promise<void> {\n    if (!this.audio) return;\n\n    return new Promise(resolve => {\n      let volume = this.audio ? this.audio.volume : 0;\n\n      this.fadeInterval = window.setInterval(() => {\n        volume = Math.max(volume - this.FADE_STEP / this.FADE_DURATION, 0);\n        if (this.audio) {\n          this.audio.volume = volume;\n        }\n\n        if (volume <= 0) {\n          if (this.fadeInterval) {\n            clearInterval(this.fadeInterval);\n            this.fadeInterval = null;\n          }\n          resolve();\n        }\n      }, this.FADE_STEP);\n    });\n  }\n\n  async pause (): Promise<void> {\n    if (this.audio) {\n      await this.fadeOut();\n      this.audio.pause();\n      this.notifyListeners('pause', {});\n    }\n  }\n\n  async resume (): Promise<void> {\n    if (this.audio) {\n      await this.audio.play();\n      this.notifyListeners('play', {});\n    }\n  }\n\n  async seekTo (options: { position: number }): Promise<void> {\n    if (this.audio) {\n      this.audio.currentTime = options.position;\n    }\n  }\n\n  async stop (): Promise<void> {\n    if (this.nextAudio) {\n      this.nextAudio.pause();\n      this.nextAudio = null;\n    }\n    if (this.audio) {\n      await this.fadeOut();\n      this.audio.pause();\n      this.audio.src = '';\n      this.audio.load();\n      this.audio.currentTime = 0;\n      this.audio = null;\n      this.notifyListeners('stop', {});\n      this.stopTimeUpdates();\n      console.log('stopped', this.audio);\n    }\n  }\n\n  async setPlaybackRate (options: { rate: number }): Promise<void> {\n    if (this.audio) {\n      this.audio.playbackRate = options.rate;\n    }\n  }\n\n  private startTimeUpdates () {\n    this.stopTimeUpdates();\n    this.intervalId = window.setInterval(() => {\n      if (this.audio) {\n        this.notifyListeners('timeUpdate', {\n          currentTime: this.audio.currentTime,\n        });\n      }\n    }, 1000);\n  }\n\n  private stopTimeUpdates () {\n    if (this.intervalId !== null) {\n      window.clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n  }\n\n  async setVolume (options: { volume: number }): Promise<void> {\n    if (this.audio) {\n      this.audio.volume = options.volume;\n    }\n  }\n\n  private setupEventListeners () {\n    if (this.audio) {\n      this.audio.onplaying = () => this.notifyListeners('play', {});\n      this.audio.onpause = () => this.notifyListeners('pause', {});\n      this.audio.onended = () => this.notifyListeners('stop', { ended: true });\n      this.audio.onerror = e =>\n        this.notifyListeners('error', { message: `Audio error: ${e}` });\n      this.audio.onwaiting = () =>\n        this.notifyListeners('buffering', { isBuffering: true });\n      this.audio.oncanplaythrough = () =>\n        this.notifyListeners('buffering', { isBuffering: false });\n    }\n  }\n}\n"]}